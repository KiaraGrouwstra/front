//- {html, id, key, model, ctrl, label, validators: {k -> msg}, hidden}
form
  div(*ngIf=`of`)

    //- select.jade
    .input-field
      //- '(input)'=`option = $event.target.value`
      select(
        '[(ngModel)]'=`option`
        name='option'
      )
        option(
          *ngFor=`let opt of schema[of]; let idx = index`
          '[value]'=`idx`
        )
          | {{opt.type}}
    //- script.
    //-   $('select').material_select();
    //- ng2-select(
    //-   '[items]'=`schema[of]`
    //-   '(data)'=`print('(data)')`
    //-   '(selected)'=`print('(selected)')`
    //-   '(removed)'=`print('(removed)')`
    //-   '(typed)'=`print('(typed)')`
    //- )

    input-value(
      *ngIf=`option`
      '[path]'=`path`
      '[schema]'=`resolveSchema()`
      '[named]'=`named`
      '[ctrl]'=`ctrl`
    )

  //- '[hidden]'=`hidden`
  //- ^ I don't know why, but it seemed to dislike this version for some reason...
  .input-field(
    *ngIf=`!of`
    '[ngClass]'=`{hidden: hidden}`
  )
    div('[ngSwitch]'='type')
      template('[ngSwitchCase]'=`'input'`)
        include ../misc/input.jade
      template('[ngSwitchCase]'=`'range'`)
        include ../misc/range.jade
      template('[ngSwitchCase]'=`'switch'`)
        include ../misc/switch.jade
      template('[ngSwitchCase]'=`'date'`)
        include ../misc/date.jade
      template('[ngSwitchCase]'=`'file'`)
        include ../misc/file.jade
      template('[ngSwitchCase]'=`'datalist'`)
        include ../misc/datalist.jade
      template('[ngSwitchCase]'=`'select'`)
        include ../misc/select.jade
      template('[ngSwitchCase]'=`'radio'`)
        include ../misc/radio.jade
      template('[ngSwitchCase]'=`'checkboxes'`)
        include ../misc/checkboxes.jade
      template('[ngSwitchCase]'=`'textarea'`)
        include ../misc/textarea.jade
      template(ngSwitchDefault)
        p UNIMPLEMENTED FIELD TYPE {{ type | json }}!

    //- data-error='wrong'
    //- data-success='right'
    //- .active
    //- '[ngClass]'=`{ 'active': attrs.default }`
    label.active(
      *ngIf=`named`
      '[attr.for]'=`id`
      '[innerHtml]'=`label`
    )
    //- ^ .active normally added dynamically by materialize.js when selecting the input.
    //- when the inputs have initial values the label/input text would initially clash though.
    //- | {{label}}
    //- ^ does {{label}} need to be raw HTML?
    //- p= `val: {{ ${ctrl}.value }}`
    //- p= `errors: {{ ${ctrl}.errors | json }}`
    //- .alert.alert-danger(*ngIf=`${ctrl}.dirty && !ctrl.valid`)
    ul.errors.card-panel.red-text.red.lighten-5('[hidden]'=`ctrl.valid`)
      //- '[hidden]'=`!(ctrl.errors||{})[vldtr]`
      //- | {{vldtr}}: {{!showError(vldtr)}}
      //- '[innerHtml]'=`validator_msgs[vldtr] ? validator_msgs[vldtr](ctrl.value) : 'error text unloaded for schema ' + vldtr`
      li.error-item(
        *ngFor=`let vldtr of validator_keys`
        '[innerHtml]'=`validator_msgs[vldtr](ctrl.value) || 'error text unloaded for schema ' + vldtr`
        '[hidden]'=`!showError(vldtr)`
      )

  //- p ctrl.value: {{ctrl.value | json}}
  //- p ctrl.errors: {{ctrl.errors | json}}
  //- p validator_keys: {{validator_keys | json}}
  //- p ctrl.validator: {{ctrl._validator | json}}
