//- {k, id, named, cols: [{k, id}], rows: [{id, cells: [{id, val}]}]}
include ./svg-icons.jade
.card
  .card-content
    span.card-title(*ngIf='named') {{k}}
    table.bordered.highlight(id=`{{id}}`)
      thead
        //- https://github.com/angular/angular/issues/2451
        //- *ngFor=`#col of cols`
        //- ; #col = cols[name]
        //- *assign-local=`#col to cols[name]`
        //- *assignLocal=`#isDesc to sortColsDesc[name]`
        th.tbl-hdr.waves-effect(
          *ngFor=`#name of colOrder; #idx = index`
          id=`{{cols[name].id}}`
          '[class.sort]'=`sortedCols.includes(name)`
          '[class.asc]'=`sortColsDesc[name] == false`
          '[class.desc]'=`sortColsDesc[name]`
          '[ngClass]'=`{ 'waves-red': idx % 6 == 0, 'waves-orange': idx % 6 == 1, 'waves-yellow': idx % 6 == 2, 'waves-green': idx % 6 == 3, 'waves-teal': idx % 6 == 4, 'waves-purple': idx % 6 == 5 }`
          '(click)'=`sortClick(name)`
        )
          | {{cols[name].k}}
          svg.icon.current(width='24', height='24')
            use(xlink:href='#arrow')
          svg.icon.desired(width='24', height='24')
            use(xlink:href='#arrow')
      tbody
        tr
          th(
            *ngFor=`#name of colOrder`
          )
            form
              .input-field
                //- #tmp=`ngForm`
                //- '[(ngModel)]'=`_filters[name]`
                //- id=`{{cols[name].id}}-input`
                input(
                  '[ngModel]'=`filters[name]`
                  '(input)'=`setFilter(name, $event.target.value)`
                )
                //- //-  || tmp.touched
                //- label(
                //-   'attr.for'=`{{cols[name].id}}-input`
                //-   '[ngClass]'=`{ 'active': filters[name] }`
                //- )
                //-   | {{cols[name].k}}
                //-   //- | {{cols[name].k}}: {{_filters[name] | json}}
              button.btn.waves-effect.waves-light.btn-floating.red.col(
                '[hidden]'=`!filters[name]`
                '(click)'=`setFilter(name, '')`
              )
                | Ã—

        //- *ngFor=`#r of rows`
        tr(
          *ngFor=`#r of data`
          id=`{{r.id}}`
        )
          //- *ngFor=`#c of r.cells`
          //- ; #c = r.cells[name]
          td(
            *ngFor=`#name of colOrder`
            id=`{{r.cells[name].id}}`
          )
            value(
              '[path]'=`r.cells[name].path`
              '[val]'=`r.cells[name].val`
              '[schema]'=`r.cells[name].schema`
            )
          //- td(
          //-   *ngFor=`#name of colOrder; #c = r.cells.get(name)`
          //-   id=`{{r.cells[name].id}}`
          //- )
          //-   value(
          //-     '[path]'=`c.path`
          //-     '[val]'=`c.val`
          //-     '[schema]'=`c.schema`
          //-   )
